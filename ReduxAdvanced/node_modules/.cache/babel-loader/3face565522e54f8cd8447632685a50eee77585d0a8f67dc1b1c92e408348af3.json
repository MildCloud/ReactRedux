{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from './cart-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://reactredux-a607f-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        //items = [], when \n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nconst sendCartData = cart => {\n  //given dispatch a function, dispatch will executes the function for you\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://reactredux-a607f-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Finish sending successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport default sendCartData;","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["/home/tianshu/ReactTutorial/ReduxAdvanced/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\n\nimport { cartActions } from './cart-slice';\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        'https://reactredux-a607f-default-rtdb.firebaseio.com/cart.json'\n      );\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          //items = [], when \n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Fetching cart data failed!',\n        })\n      );\n    }\n  };\n};\n\nconst sendCartData = (cart) => {\n    //given dispatch a function, dispatch will executes the function for you\n    return (\n        async (dispatch) => {\n            dispatch(\n                uiActions.showNotification({\n                    status: 'pending',\n                    title: 'Sending...',\n                    message: 'Sending cart data'\n                })\n            );\n            const sendRequest = async () => {\n                const response = await fetch('https://reactredux-a607f-default-rtdb.firebaseio.com/cart.json',\n                { method: 'PUT', body: JSON.stringify(cart) });\n                if (!response.ok) {\n                    throw new Error('Sending cart data failed');\n                }\n            };\n            try {\n                await sendRequest();\n                dispatch(\n                    uiActions.showNotification({\n                      status: 'success',\n                      title: 'Success',\n                      message: 'Finish sending successfully'\n                    })\n                );\n            } catch (error) {\n                dispatch(\n                    uiActions.showNotification({\n                      status: 'error',\n                      title: 'Error!',\n                      message: 'Sending cart data failed!',\n                    })\n                );\n            }\n        }\n    );\n};\n\nexport default sendCartData;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEACF,CAAC;MACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IACD,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CACNF,WAAW,CAACW,WAAW,CAAC;QACtBC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3B;QACAC,aAAa,EAAEH,QAAQ,CAACG;MAC1B,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,QAAQ,CACNH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAC3B;EACA,OACI,MAAOlB,QAAQ,IAAK;IAChBA,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;MACvBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CACL,CAAC;IACD,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAC7F;QAAEiB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAAE,CAAC,CAAC;MAC9C,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IACD,IAAI;MACA,MAAMc,WAAW,CAAC,CAAC;MACnBnB,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACL,CAAC;IACL,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZZ,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACL,CAAC;IACL;EACJ,CAAC;AAET,CAAC;AAED,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}