{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiAction } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiAction.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://reactredux-a607f-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    dispatch(uiAction.showNotification({\n      status: 'success',\n      title: 'Success',\n      message: 'Finish sending successfully'\n    }));\n  };\n};\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiAction","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","cartAction","actions"],"sources":["/home/tianshu/ReactTutorial/ReduxAdvanced/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiAction } from \"./ui-slice\";\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0\n    },\n    reducers: {\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id);\n            state.totalQuantity++;\n            if (!existingItem) {\n                state.items.push({\n                    id: newItem.id,\n                    price: newItem.price,\n                    quantity: 1,\n                    totalPrice: newItem.price,\n                    name: newItem.title\n                });\n            }\n            else {\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n            }\n        },\n        removeItemFromCart(state, action) {\n            const id = action.payload;\n            const existingItem = state.items.find(item => item.id === id);\n            state.totalQuantity--;\n            if (existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.id !== id);\n            }\n            else {\n                existingItem.quantity--;\n            }\n        }\n    }\n});\n\nconst sendCartData = (cart) => {\n    return (\n        async (dispatch) => {\n            dispatch(\n                uiAction.showNotification({\n                    status: 'pending',\n                    title: 'Sending...',\n                    message: 'Sending cart data'\n                })\n            );\n            const sendRequest = async () => {\n                const response = await fetch('https://reactredux-a607f-default-rtdb.firebaseio.com/cart.json',\n                { method: 'PUT', body: JSON.stringify(cart) });\n                if (!response.ok) {\n                    throw new Error('Sending cart data failed');\n                }\n            };\n            \n            dispatch(\n                uiAction.showNotification({\n                  status: 'success',\n                  title: 'Success',\n                  message: 'Finish sending successfully'\n                })\n            );\n        }\n    );\n};\n\nexport const cartAction = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,YAAY;AAErC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACO,YAAY,EAAE;QACfJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBf,IAAI,EAAEQ,OAAO,CAACU;QAClB,CAAC,CAAC;MACN,CAAC,MACI;QACDR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAK;MACrE;IACJ,CAAC;IACDI,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAIO,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC7BV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MACI;QACDH,YAAY,CAACM,QAAQ,EAAE;MAC3B;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMK,YAAY,GAAIC,IAAI,IAAK;EAC3B,OACI,MAAOC,QAAQ,IAAK;IAChBA,QAAQ,CACJzB,QAAQ,CAAC0B,gBAAgB,CAAC;MACtBC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,YAAY;MACnBQ,OAAO,EAAE;IACb,CAAC,CACL,CAAC;IACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAC7F;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAAE,CAAC,CAAC;MAC9C,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IAEDZ,QAAQ,CACJzB,QAAQ,CAAC0B,gBAAgB,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,SAAS;MAChBQ,OAAO,EAAE;IACX,CAAC,CACL,CAAC;EACL,CAAC;AAET,CAAC;AAED,OAAO,MAAMU,UAAU,GAAGrC,SAAS,CAACsC,OAAO;AAE3C,eAAetC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}