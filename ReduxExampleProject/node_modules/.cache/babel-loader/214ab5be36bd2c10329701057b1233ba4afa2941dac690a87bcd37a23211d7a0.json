{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increment(state) {\n      //will auto copy the sate inside toolkit package\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    isAuthenticated: false\n  },\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport const counterActions = counterSlice.actions;\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reduce\n  }\n});\nexport default store;\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     if (action.type === 'increment') {\n//         // state.counter++;\n//         // return state;\n//         // should never change the existing state and obj are ref in JS\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         };\n//     }\n//     else {\n//         return state;\n//     }\n// };","map":{"version":3,"names":["createStore","combineReducers","createSlice","configureStore","counterSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggle","authSlice","isAuthenticated","login","logout","counterActions","actions","store","reducer","reduce"],"sources":["/home/tianshu/ReactTutorial/ReduxExampleProject/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: { counter: 0, showCounter: true},\n    reducers: {\n        increment(state) {\n            //will auto copy the sate inside toolkit package\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggle(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: {isAuthenticated: false},\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        }\n    }\n});\n\nexport const counterActions = counterSlice.actions;\n\nconst store = configureStore({\n    reducer: { counter: counterSlice.reduce }\n});\n\nexport default store;\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     if (action.type === 'increment') {\n//         // state.counter++;\n//         // return state;\n//         // should never change the existing state and obj are ref in JS\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         };\n//     }\n//     else {\n//         return state;\n//     }\n// };"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IAAEC,OAAO,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAI,CAAC;EAC9CC,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACb;MACAA,KAAK,CAACJ,OAAO,EAAE;IACnB,CAAC;IACDK,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACJ,OAAO,EAAE;IACnB,CAAC;IACDM,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACJ,OAAO,GAAGI,KAAK,CAACJ,OAAO,GAAGO,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACVA,KAAK,CAACH,WAAW,GAAG,CAACG,KAAK,CAACH,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMS,SAAS,GAAGf,WAAW,CAAC;EAC1BG,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAE;IAACY,eAAe,EAAE;EAAK,CAAC;EACtCT,QAAQ,EAAE;IACNU,KAAKA,CAACR,KAAK,EAAE;MACTA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDE,MAAMA,CAACT,KAAK,EAAE;MACVA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAElD,MAAMC,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IAAEjB,OAAO,EAAEH,YAAY,CAACqB;EAAO;AAC5C,CAAC,CAAC;AAEF,eAAeF,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}