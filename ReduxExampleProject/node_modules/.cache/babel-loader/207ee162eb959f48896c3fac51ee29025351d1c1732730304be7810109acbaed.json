{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport const counterActions = counterSlice.actions;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     if (action.type === 'increment') {\n//         // state.counter++;\n//         // return state;\n//         // should never change the existing state and obj are ref in JS\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         };\n//     }\n//     else {\n//         return state;\n//     }\n// };","map":{"version":3,"names":["createStore","combineReducers","createSlice","configureStore","counterSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActions","actions","store","reducer"],"sources":["/home/tianshu/ReactTutorial/ReduxExampleProject/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: { counter: 0, showCounter: true},\n    reducers: {\n        increment(state) {\n          state.counter++;\n        },\n        decrement(state) {\n          state.counter--;\n        },\n        increase(state, action) {\n          state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n          state.showCounter = !state.showCounter;\n        }\n      }\n});\n\nexport const counterActions = counterSlice.actions;\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport default store;\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     if (action.type === 'increment') {\n//         // state.counter++;\n//         // return state;\n//         // should never change the existing state and obj are ref in JS\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     else if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         };\n//     }\n//     else {\n//         return state;\n//     }\n// };"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IAAEC,OAAO,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAI,CAAC;EAC9CC,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACJ,OAAO,EAAE;IACjB,CAAC;IACDK,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACJ,OAAO,EAAE;IACjB,CAAC;IACDM,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACJ,OAAO,GAAGI,KAAK,CAACJ,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACH,WAAW,GAAG,CAACG,KAAK,CAACH,WAAW;IACxC;EACF;AACN,CAAC,CAAC;AAEF,OAAO,MAAMS,cAAc,GAAGb,YAAY,CAACc,OAAO;AAElD,MAAMC,KAAK,GAAGhB,cAAc,CAAC;EACzBiB,OAAO,EAAEhB,YAAY,CAACgB;AAC1B,CAAC,CAAC;AAEF,eAAeD,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}